{"version":3,"sources":["TicTacToe/Square.js","TicTacToe/Board.js","TicTacToe.js","common/ViewSource.js","serviceWorker.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","i","_this","this","TicTacToe_Square","squares","renderSquare","React","Component","calculateWinner","lines","length","_lines$i","Object","slicedToArray","b","c","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","_this2","_this$state","current","winner","moves","map","move","desc","key","jumpTo","TicTacToe_Board","handleClick","ViewSource","button","handleViewSource","bind","assertThisInitialized","source","regex","matches","URL","window","location","origin","exec","replace","console","log","change","e","preventDefault","document","getElementsByClassName","remove","target","parent","parentElement","code","rows","getElementsByTagName","innerHTML","updateLinks","insertBefore","Boolean","hostname","match","ReactDOM","render","src_TicTacToe","src_common_ViewSource","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f2a3dee.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n  return (\n    <button\n      className='square'\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='board-row'>\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './TicTacToe.css';\nimport Board from './TicTacToe/Board';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{squares: Array(9).fill(null)}],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) return;\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{squares: squares}]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const {history, stepNumber} = this.state;\n    const current = history[stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n    winner ? status = 'Winner: ' + winner\n    : status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    return (\n      <div className=\"TicTacToe\">\n        <div className=\"TicTacToe-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"TicTacToe-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (\n      squares[a]\n      &&\n      squares[a] === squares[b]\n      &&\n      squares[a] === squares[c]\n    ) return squares[a];\n  }\n  return null;\n}\n\nexport default Game;\n","import React from 'react';\nimport './ViewSource.css';\n\nclass ViewSource extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {button: \"View Source\"};\n    this.handleViewSource = this.handleViewSource.bind(this);\n  }\n\n  change(source, regex) {\n    let URL = window.location.origin;\n    let matches;\n    while ((matches = regex.exec(source)) !== null) {\n      let replace = matches[0];\n      let value = matches[1] + matches[2];\n      replace = replace.replace(value, URL + value);\n      console.log(\"replacing:\", matches[0], \"=to=\", replace);\n      source = source.replace(matches[0], replace);\n    }\n    return source;\n  }\n\n  updateLinks(source) {\n    let regex = /href=\"(\\/)([^\"]+)\"/;\n    source = this.change(source, regex);\n    regex = /src=\"(\\/)([^\"]+)\"/;\n    source = this.change(source, regex);\n    regex = /.p=\"(\\/)([^\"]+)\"/;\n    source = this.change(source, regex);\n    const btn = '<button>View Source</button>';\n    source = source.replace(btn, '');\n    return source;\n  }\n\n  handleViewSource(e) {\n    e.preventDefault();\n    if (this.state.button === \"Hide Source\") {\n      const el = document.getElementsByClassName(\"ViewSource\")[0];\n      el.remove();\n      this.setState({button: 'View Source'});\n      return;\n    }\n    const button = e.target;\n    const parent = button.parentElement;\n    let code = document.createElement('textarea');\n    let source = \"<!DOCTYPE html><html>\";\n    code.className = \"ViewSource\";\n    code.rows = 16;\n    source += document.getElementsByTagName('html')[0].innerHTML;\n    source += \"</html>\";\n    source = this.updateLinks(source);\n    source = source.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    code.innerHTML = source;\n    parent.insertBefore(code, button);\n    this.setState({button: 'Hide Source'});\n  }\n\n  render() {\n    return <button className=\"ViewSource-button\" onClick={this.handleViewSource}>{this.state.button}</button>;\n  }\n}\n\nexport default ViewSource;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './TicTacToe';\nimport ViewSource from './common/ViewSource';\nimport * as serviceWorker from './serviceWorker';\n//import eruda from 'eruda';\n\nReactDOM.render(\n  (\n    <div>\n      <App />\n      <ViewSource/>\n    </div>\n  ), document.getElementById('root'));\n\n//eruda.init();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}